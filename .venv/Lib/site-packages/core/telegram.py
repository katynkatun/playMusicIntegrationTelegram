from telethon import TelegramClient, sync, events
from telethon.tl.types import InputMessagesFilterUrl 
from .constant import *

class Messages():
    def __init__(self, chatid, 
                 min_id_mess, 
                 api_id = api_id, 
                 api_hash = api_hash,
                 session_name = session_name):
        client = TelegramClient(session_name, api_id, api_hash)
        client.start()
        self.chatid = chatid
        self.min_id_mess = min_id_mess
        self.client = client

    def __get_messages(self):
        messages = self.client.get_messages(self.chatid, max_count_messages, min_id = self.min_id_mess, filter=InputMessagesFilterUrl)
        return messages

    def get_track_id(url):
        index = url.find(play_music_url)
        track_id = ""
        if index:
            tmp_url = url[index-1:]
            index = tmp_url.find(last_play_music_simvol)
            tmp_url = tmp_url[index+3:]
            spliter_index = tmp_url.find(play_music_spliter_url)
            track_id = tmp_url[:spliter_index]
        else:
            print ("not found")
        return track_id

    def get_songs(self):
        messages = self.__get_messages()
        set_songs = set()
        for message in messages:
            track_id = Messages.get_track_id(message.message)
            if track_id:
                set_songs.add(track_id)
        return set_songs

class TelegramEvent():
    def __init__(self, chatid, 
                 api_id = api_id, 
                 api_hash = api_hash,
                 session_name = session_name):
        client = TelegramClient(session_name, api_id, api_hash)       
        self.chatid = chatid
        self.client = client        

    def start_event(self):
        client = self.client
        @client.on(events.NewMessage(chats=(self.chatid)))
        async def normal_handler(event):
            print(event.message)
            user_mess=event.message.to_dict()['message']
            f.write(user_mess+"\n\n")
            f.flush()
        client.start()
        f=open('messages_from_chat', 'a')
        client.run_until_disconnected()
        f.close()